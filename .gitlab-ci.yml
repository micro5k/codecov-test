---
# SPDX-FileCopyrightText: none
# SPDX-License-Identifier: CC0-1.0

variables:
  GIT_DEPTH: 1
  FF_USE_FASTZIP: true
  CACHE_COMPRESSION_LEVEL: "fastest"
  ARTIFACT_COMPRESSION_LEVEL: "fastest"

workflow:
  auto_cancel:
    on_new_commit: "interruptible"

default:
  image: "eclipse-temurin:17-jdk-alpine"
  interruptible: true
  cache:
    key: "cache-build"
    paths: [cache/build]
    when: "always"
  before_script: |
    # Install dependencies
    apk add bash zip~=3.0 wget || exit "${?}"

stages:
  - build
  - test

# Temporarily disabled
.build-oss-job:
  stage: build
  timeout: "5 minutes"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - "LICENSES/**"
        - "includes/**"
        - "tools/**"
        - "zip-content/**"
        - "CHANGELOG.rst"
        - "LICENSE*.rst"
        - "build.sh"
        - "conf-*.sh"
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG && $CI_COMMIT_TAG != "nightly"
  cache: []
  script: "BUILD_TYPE='oss' './build.sh'"

build-job:
  stage: build
  timeout: "5 minutes"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - "LICENSES/**"
        - "includes/**"
        - "tools/**"
        - "zip-content/**"
        - "CHANGELOG.rst"
        - "LICENSE*.rst"
        - "build.sh"
        - "conf-*.sh"
  script: "BUILD_TYPE='full' './build.sh'"
  artifacts:
    paths:
      - "output/*.zip*"
    expire_in: "15 minutes"

# Cache expiration: 14 days
ping-cache:
  stage: build
  interruptible: false
  timeout: "5 minutes"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
  before_script: []
  script: ":"

# Temporarily disabled
#include: ".gitlab/security-scans.yml"
